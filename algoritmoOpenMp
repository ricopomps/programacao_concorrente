#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <omp.h>

#define TAMANHO 100000

void bubbleSortParallel(int *arr, int n) {
    int i, j, temp;
    for (i = 0; i < n; i++) {
        // Fase par
        #pragma omp parallel for private(temp, j)
        for (j = 0; j < n-1; j += 2) {
            if (arr[j] > arr[j+1]) {
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }

        // Fase ímpar
        #pragma omp parallel for private(temp, j)
        for (j = 1; j < n-1; j += 2) {
            if (arr[j] > arr[j+1]) {
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

int main() {
    int *arr = (int*) malloc(TAMANHO * sizeof(int));
    double inicio, fim, tempo;

    // Inicializa o array com valores aleatórios
    srand(time(NULL));
    for (int i = 0; i < TAMANHO; i++) {
        arr[i] = rand() % 10000;
    }

    // Algoritmo Paralelo com OpenMP
    inicio = omp_get_wtime();
    bubbleSortParallel(arr, TAMANHO);
    fim = omp_get_wtime();

    tempo = fim - inicio;
    printf("Tempo OpenMP: %f segundos\n", tempo);

    free(arr);
    return 0;
}
